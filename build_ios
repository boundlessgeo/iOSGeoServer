#!/bin/bash

#
# Script for building libraries for iOS platform. Based on the version found at:
#
#   https://github.com/mweisman/ShapeKit/blob/master/lib_src/build_ios
#
# Based on the original provided under the following copyright/license.   

################################################################################
#
# Copyright (c) 2008-2009 Christopher J. Stawarz
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
# BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
# ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
################################################################################

ios_ver=${IOS_VERSION:-7.1}
osx_ver=${OSX_VERSION:-10.8}

usage() {
    cat >&2 << EOF
Usage: ${0##*/} [-h] -p prefix -a arch [configure_args]
    -h Print help message
    -p Installation prefix
    -a Target architecture

Any additional arguments are passed to configure.

The following environment variables affect the build process:

    IPHONEOS_DEPLOYMENT_TARGET  (default: $ios_ver)
    MACOSX_DEPLOYMENT_TARGET    (default: $osx_ver)

EOF
}

while getopts "hp:a:" opt; do
    case $opt in
    h  ) usage ; exit 0 ;;
    p  ) prefix="$OPTARG" ;;
    a  ) arch="$OPTARG" ;;
    \? ) usage ; exit 2 ;;
    esac
done
shift $(( $OPTIND - 1 ))

if [ -z $prefix ] || [ -z $arch ]; then
  usage
  exit 2
fi

export IPHONEOS_DEPLOYMENT_TARGET=$ios_ver
export MACOSX_DEPLOYMENT_TARGET=$osx_ver

case $arch in 

  arm*)
    platform=iPhoneOS 
    extra_cflags=""
  ;;

  i386|x86_64)
     echo "compiling for simulator"
    platform=iPhoneSimulator 
    extra_cflags="-D__IPHONE_OS_VERSION_MIN_REQUIRED=${IPHONEOS_DEPLOYMENT_TARGET%%.*}0000"

  ;;

  *)
    echo "Unsupported architecture: $arch"
    exit 2

esac

platform_dir="/Applications/Xcode.app/Contents/Developer/Platforms/${platform}.platform/Developer"
platform_bin_dir="${platform_dir}/usr/bin"
platform_sdk_dir="${platform_dir}/SDKs/${platform}${IPHONEOS_DEPLOYMENT_TARGET}.sdk"
prefix=$prefix/$arch

export CFLAGS="-arch ${arch} -pipe -Os -gdwarf-2 -isysroot ${platform_sdk_dir} ${extra_cflags}"
export LDFLAGS="-arch ${arch} -isysroot ${platform_sdk_dir}"
export CXXFLAGS="${CFLAGS}"

if [ ! -d $prefix ]; then
  mkdir $prefix || exit
fi

make clean
./configure \
    --prefix="${prefix}" \
    --host="${arch}-apple-darwin" \
    --disable-shared \
    --enable-static \
    --with-unix-stdio-64=no \
    --with-sse=no \
    "$@" || exit

make install || exit

cat >&2 << EOF

Build succeeded!  Files were installed in

  $prefix

EOF

